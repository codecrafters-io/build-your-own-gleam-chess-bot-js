slug: "gleam-chess-bot-js"
name: "Build your own Gleam Chess Bot (JS)"
short_name: "Chess Bot"
release_status: "beta"
visibility: "private"

# TODO: Isaac to review, this appears on:
# - The unauthed course overview page (https://app.codecrafters.io/courses/gleam-chess-bot/overview)
# - The "Introduction" page when logged in (https://app.codecrafters.io/courses/gleam-chess-bot/introduction)
description_md: |-
  Welcome to the inaugural [Unofficial Gleam Chess Tournament](https://github.com/isaacharrisholt/gleam-chess-tournament)!

  This is a friendly competition to see who can create the best chess bot in the [Gleam programming language](https://gleam.run). Once submissions
  are closed, the tournament will be turned into a Twitch stream or YouTube video on [my channel](https://www.youtube.com/IsaacHarrisHolt).

  When you complete this CodeCrafters challenge, you'll automatically be enrolled in the tournament.

  This challenge is specifically for Gleam targeting JavaScript.
  If you're interested in building your bot using Gleam targeting Erlang/OTP, you can find that option [here](https://app.codecrafters.io/courses/gleam-chess-bot/overview).

short_description_md: |-
  Build a chess bot in Gleam (targeting JavaScript)

completion_percentage: 5

# TODO: Isaac to review, this is what we show users once they mark the last stage as complete.
completion_message_markdown: |-
  You've completed the Gleam Chess Bot challenge!

  You're now enrolled in in the tournament.

  Watch out for [Isaac's next video](https://www.youtube.com/IsaacHarrisHolt) on the tournament.

languages:
  - slug: "gleam"
    release_status: "beta"

marketing:
  difficulty: medium
  sample_extension_idea_title: "Chess Bot"
  sample_extension_idea_description: "A Gleam Chess Bot that can participate in chess tournaments by responding to HTTP requests with chess moves"

  # TODO: Isaac to review, this is what we show on the overview page. You can either keep the default CC ones below or customize for yourself.
  testimonials:
    - author_name: "Charles Guo"
      author_description: "Software Engineer, Stripe"
      author_avatar: "https://codecrafters.io/images/external/testimonials/charles-guo.png"
      link: "https://github.com/shaldengeki"
      text: |-
        The Redis challenge was extremely fun. I ended up having to read the
        Redis Protocol specification doc pretty carefully in its entirety! The result
        felt like lightly-guided independent study, if that makes sense. (Which, again, was lots of fun)
    - author_name: "Patrick Burris"
      author_description: "Senior Software Developer, CenturyLink"
      author_avatar: "https://codecrafters.io/images/external/testimonials/patrick-burris.jpeg"
      link: "https://github.com/Jumballaya"
      text: |-
        I think the instant feedback right there in the git push is really cool.
        Didn't even know that was possible!

stages:
  - slug: "qc6"
    name: "Respond to /move request"
    difficulty: easy
    marketing_md: |-
      In this stage, you'll create a basic HTTP server that can respond to chess move requests.

  - slug: "zo3"
    name: "Respond with an opening"
    difficulty: medium
    marketing_md: |-
      Make your bot play real chess moves by implementing a simple opening strategy.

  - slug: "xs2"
    name: "Bratko-Kopec test"
    difficulty: hard
    marketing_md: |-
      Test your bot's tactical abilities against the famous Bratko-Kopec test positions.

  - slug: "ix8"
    name: "Win at Chess"
    difficulty: hard
    marketing_md: |-
      Create a complete chess engine that can play and win full games.

  - slug: "dx9"
    name: "Submit your bot"
    difficulty: easy
    marketing_md: |-
      Submit your bot to the tournament.
